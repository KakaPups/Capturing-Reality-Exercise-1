project(CRFramework)

cmake_minimum_required(VERSION 2.8)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -w") # :)

if(CMAKE_VERSION VERSION_LESS "3.1")
	if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		set(CMAKE_CXX_FLAGS "--std=gnu++14 ${CMAKE_CXX_FLAGS}")
	endif()
else()
	set(CMAKE_CXX_STANDARD 14)
endif()

if(WIN32)
	set(3rd "${CMAKE_CURRENT_SOURCE_DIR}/3rdparty")
	if(NOT EXISTS "${3rd}/")
		message(FATAL_ERROR "Could not fild the '3rdparty' folder. Please download the 3rd party libraries from moodle and extract them to '${3rd}'.")
	endif()
	set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${3rd}/zlib ${3rd}/libjpeg ${3rd}/libpng ${3rd}/openexr)
	set(JPEG_NAMES "libjpeg")
	set(EIGEN3_INCLUDE_DIR ${3rd}/eigen)
endif()

find_package(Eigen3 REQUIRED)

find_package(PNG)
find_package(JPEG)
find_package(OpenEXR)

message(STATUS ${JPEG_LIBRARIES})

if(PNG_FOUND)
	add_definitions(-DWITH_PNG)
	include_directories(${PNG_INCLUDE_DIRS})
endif()
if(JPEG_FOUND)
	add_definitions(-DWITH_JPEG)
	include_directories(${JPEG_INCLUDE_DIR})
endif()
if(OPENEXR_FOUND)
	add_definitions(-DWITH_EXR)
	include_directories(${OPENEXR_INCLUDE_DIRS})
endif()

include_directories(${EIGEN3_INCLUDE_DIR} "${CMAKE_SOURCE_DIR}/include")

add_executable(example include/image.h src/image_io.cc example.cc)
if(PNG_FOUND)
	target_link_libraries(example ${PNG_LIBRARIES})
endif()
if(JPEG_FOUND)
	target_link_libraries(example ${JPEG_LIBRARIES})
endif()
if(OPENEXR_FOUND)
	target_link_libraries(example ${OPENEXR_LIBRARIES})
endif()