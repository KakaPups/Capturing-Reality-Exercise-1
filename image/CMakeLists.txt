cmake_minimum_required(VERSION 3.0)

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -w") # :)

if(WIN32)
	set(3rd "${CMAKE_SOURCE_DIR}/3rdparty")
	if(NOT EXISTS "${3rd}/")
		message(FATAL_ERROR "Could not fild the '3rdparty' folder. Please download the 3rd party libraries from moodle and extract them to '${3rd}'.")
	endif()
	set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${3rd}/zlib ${3rd}/libjpeg ${3rd}/libpng ${3rd}/openexr)
	set(JPEG_NAMES "libjpeg")
	set(EIGEN3_INCLUDE_DIR ${3rd}/eigen)
endif()

find_package(PNG)
find_package(JPEG)
find_package(OpenEXR)

if(PNG_FOUND)
	add_definitions(-DWITH_PNG)
	include_directories(${PNG_INCLUDE_DIRS})
endif()
if(JPEG_FOUND)
	add_definitions(-DWITH_JPEG)
	include_directories(${JPEG_INCLUDE_DIR})
endif()
if(OPENEXR_FOUND)
	add_definitions(-DWITH_EXR)
	include_directories(${OPENEXR_INCLUDE_DIRS})
endif()

add_library(image STATIC include/image.h src/image_io.cc src/image_manip.cc)
target_include_directories(image PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include")
if(PNG_FOUND)
	target_link_libraries(image ${PNG_LIBRARIES})
endif()
if(JPEG_FOUND)
	target_link_libraries(image ${JPEG_LIBRARIES})
endif()
if(OPENEXR_FOUND)
	target_link_libraries(image ${OPENEXR_LIBRARIES})
endif()